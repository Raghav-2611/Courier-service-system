import mysql.connector as sql

def connect_to_database():
    try:
        return sql.connect(
            host='localhost',
            user='root',
            passwd='manager',
            database='courier_service_system2'
        )
    except sql.Error as e:
        print(f"Error connecting to the database: {e}")
        exit()

conn = connect_to_database()
cust1 = conn.cursor()

def main_menu():
    print("WELCOME TO BATMAN COURIER SERVICE!")
    print("\n1. CREATE YOUR COURIER SERVICE ACCOUNT")
    print("2. LOGIN")
    print("3. EXIT")
    
    try:
        choice = int(input("\nEnter your choice: "))
        if choice == 1:
            create_account()
        elif choice == 2:
            login()
        elif choice == 3:
            print("Thank you for using Batman Courier Service!")
            exit()
        else:
            print("Invalid choice. Please select 1, 2, or 3.")
            main_menu()
    except ValueError:
        print("Invalid input. Please enter a number.")
        main_menu()

def create_account():
    print("\nCREATE A NEW ACCOUNT")
    name = input("Enter your username: ").strip()
    passwd = input("Set your password: ").strip()
    passwd1 = input("Confirm your password: ").strip()

    if passwd == passwd1:
        try:
            cust1.execute("INSERT INTO login (user_name, password) VALUES (%s, %s)", (name, passwd))
            conn.commit()
            print("\nACCOUNT CREATED! CONGRATULATIONS")
            input("Press enter to continue to login.")
            login()
        except sql.Error as e:
            print(f"Error creating account: {e}")
    else:
        print("Passwords do not match. Please try again.")
        create_account()

def login():
    print("\nLOGIN TO YOUR ACCOUNT")
    email = input("Enter your username: ").strip()
    passd = input("Enter your password: ").strip()

    try:
        cust1.execute("SELECT * FROM login WHERE user_name = %s AND password = %s", (email, passd))
        if cust1.fetchone():
            print("\nLogin successful!")
            menu()
        else:
            print("\nIncorrect username or password.")
            main_menu()
    except sql.Error as e:
        print(f"Error during login: {e}")

def menu():
    while True:
        print("\nMAIN MENU")
        print("1. Courier Order and Customer Details")
        print("2. Billing Procedure")
        print("3. Courier Service Boys")
        print("4. Exit")
        
        try:
            choice = int(input("\nEnter your choice: "))
            if choice == 1:
                courier_section()
            elif choice == 2:
                billing_procedure()
            elif choice == 3:
                courier_boys()
            elif choice == 4:
                print("\nExiting the program. Thank you!")
                break
            else:
                print("Invalid choice. Please select a number between 1 and 4.")
        except ValueError:
            print("Invalid input. Please enter a number.")

def courier_section():
    print("\nCOURIER ORDER AND CUSTOMER DETAILS")
    print("A. Courier Placement")
    print("B. Courier Order List")
    sect = input("Enter the section you want to access (A/B): ").strip().upper()

    if sect == "A":
        place_order()
    elif sect == "B":
        view_orders()
    else:
        print("Invalid section. Returning to main menu.")
        
def place_order():
    print("\nPLACE A NEW COURIER ORDER")
    a = input("Enter the customer name: ").strip()
    try:
        b = int(input("Enter the customer mobile number: "))
    except ValueError:
        print("Invalid mobile number.")
        return
    c = input("Enter the customer address: ").strip()
    d = input("Enter the receiver name: ").strip()
    try:
        e = int(input("Enter the receiver mobile number: "))
    except ValueError:
        print("Invalid receiver mobile number.")
        return
    f = input("Enter the receiver address: ").strip()

    try:
        cust1.execute(
            "INSERT INTO couriers (customer_name, customer_mobile_number, customer_address, receiver_name, receiver_mobile_number, receiver_address) VALUES (%s, %s, %s, %s, %s, %s)",
            (a, b, c, d, e, f)
        )
        conn.commit()
        print(f"\n{cust1.rowcount} courier(s) placed successfully.")
    except sql.Error as e:
        print(f"Error placing order: {e}")

def view_orders():
    print("\nVIEW YOUR COURIER ORDERS")
    a = input("Enter the customer mobile number: ").strip()

    try:
        cust1.execute("SELECT * FROM couriers WHERE customer_mobile_number = %s", (a,))
        orders = cust1.fetchall()
        if orders:
            print("\nCustomer Name | Customer Mobile No | Customer Address | Receiver Name | Receiver Mobile No | Receiver Address")
            for order in orders:
                print(order)
        else:
            print("No orders found for this mobile number.")
    except sql.Error as e:
        print(f"Error retrieving orders: {e}")

def billing_procedure():
    print("\nBILLING PROCEDURE")
    try:
        cust1.execute("SELECT * FROM couriers2")
        bills = cust1.fetchall()
        if bills:
            print("\nWeight (kg) | Cost (Rs)")
            for bill in bills:
                print(bill)
        else:
            print("No billing details found.")
    except sql.Error as e:
        print(f"Error fetching billing details: {e}")

def courier_boys():
    print("\nCOURIER SERVICE BOYS")
    city = input("Enter your city name: ").strip()

    try:
        cust1.execute("SELECT * FROM couriers3 WHERE city = %s", (city,))
        boys = cust1.fetchall()
        if boys:
            print("\nCity | Courier Boy | Mobile No")
            for boy in boys:
                print(boy)
        else:
            print("No courier boys found for this city.")
    except sql.Error as e:
        print(f"Error fetching courier boy details: {e}")

main_menu()
